version: "3.0"

services:
    core_redis:
        image: redis:${REDIS_VERSION:-lastest}
        hostname: core_redis
        container_name: core_redis
        ports:
            - "${REDIS_CORE_PORT}:6379"
        restart: always
        command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_CORE_PASSWORD}
        volumes:
            - core_redis_volume:/data

    core_postgres:
        image: postgres:${POSTGRES_VERSION:-latest}
        container_name: core_postgres
        restart: unless-stopped
        ports:
            - "${POSTGRES_CORE_PORT}:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_CORE_DB:-postgres}
            POSTGRES_USER: ${POSTGRES_CORE_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_CORE_PASSWORD:-changeme}
        volumes:
            - core_postgres_volume:/var/lib/postgresql/

    # pgAdmin 4 service
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        ports:
            - "${PGADMIN_PORT:-5050}:80"

    redis-insight:
        image: redis/redisinsight:latest
        container_name: redis_insight
        restart: always
        ports:
            - "5540:5540"
        volumes:
            - redis-insight:/data

    zookeeper:
        image: wurstmeister/zookeeper:latest
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: "zookeeper:2888:3888"

    kafka:
        image: wurstmeister/kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENER_NAME_PREFIXES: INSIDE,OUTSIDE
            KAFKA_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LOG_DIRS: /kafka-logs
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

volumes:
    core_redis_volume:
    core_postgres_volume:
    redis-insight:

networks:
    default:
        name: funbox_network
        external: true
